
#Область ОбработчикПодпискиНаСобытие

// Процедура - Notice fired проведение увольнения обработка проведения
//
// Параметры:
//  Источник - ДокументСсылка - Увольнение, УвольнениеСписком
//
Процедура NoticeFired_ПроведениеУвольненияОбработкаПроведения(Источник) Экспорт
	
 	ЭтоРабочаяБД = ИТФоновоеВыполнение.ЭтоРабочаяБазаДанных();
	Если НЕ ЭтоРабочаяБД Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникИмя					= Источник.Метаданные().Имя;
	ИсточникУникальныйИД		= Строка(Источник.Ссылка.УникальныйИдентификатор());	
	ТекстФоновойПроцедуры 		= "ИТОповищение.ОтправитьПочтовоеУведомлениеОУвольнении(ИсточникИмя, ИсточникУникальныйИД, мПолучатели);";

	ПараметрыФоновойПроцедуры						= НовыйПараметрыПочтовоеУведомлениеОУвольнении();
	ПараметрыФоновойПроцедуры.ИсточникИмя 			= ИсточникИмя;
	ПараметрыФоновойПроцедуры.ИсточникУникальныйИД 	= ИсточникУникальныйИД;
	
	ПараметрыФоновойПроцедуры.мПолучатели.Добавить("it@massandra.ru");
	
	ИТФоновоеВыполнение.ЗапуститьФоновоеВыполнение(ТекстФоновойПроцедуры, ПараметрыФоновойПроцедуры);

КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура - Отправить почтовое уведомление в фоновом режиме
//
// Параметры:
//	ИсточникИмя - Строка - Метаданные().Имя документа
//	ИсточникУникальныйИД - Строка - УникальныйИдентификатор документа как строка
//	мПолучатели - Массив ИЗ Строка - Адреса электронной почты (например: "it@massandra.ru")
//
Процедура ОтправитьПочтовоеУведомлениеОУвольнении(ИсточникИмя, ИсточникУникальныйИД, мПолучатели) Экспорт

	ДокУИДИзСтр	= Новый УникальныйИдентификатор(ИсточникУникальныйИД);
	ИсточникДок = Документы[ИсточникИмя].ПолучитьСсылку(ДокУИДИзСтр);
	Выборка 	= ВыбратьСотрудниковДоступКоторымНеобходимоЗакрыть(ИсточникДок);
	
	Если Выборка = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПользовательSMTP 	= "app1C@massandra.ru";
	ОтправительИмя		= "app1C";
	темаПисьма 			= "Увольнение сотрудника, необходимо заблокировать доступ!";	
	УведомлениеТекст	= СформироватьУведомлениеПоУволенномуСотруднику(Выборка);
	
	ОписаниеПисьма 		= ИТИнтернетПочта.НовыйОписаниеИнтернетПочтаПисьма();

	ОписаниеПисьма.ПользовательSMTP = ПользовательSMTP;
	ОписаниеПисьма.ОтправительИмя   = ОтправительИмя;
	ОписаниеПисьма.Получатели 		= мПолучатели;
	ОписаниеПисьма.Тема				= темаПисьма;
	ОписаниеПисьма.Текст			= УведомлениеТекст;
	
	ИТИнтернетПочта.ОтправитьПочтовоеСообщение(ОписаниеПисьма);

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ИнтерфейсСтруктура

// Функция - Интерфейс для инициализации параметров процедуры "ОтправитьПочтовоеУведомлениеОУвольнении"
// 
// Возвращаемое значение:
//  Параметры - Структура:
//				* ИсточникИмя - Документ.Метаданные().Имя (Увольнение, УвольнениеСписком)
//				* ИсточникУникальныйИД - Строка - Строка(ДокументСсылкаИсточник.Ссылка.УникальныйИдентификатор())
//				* мПолучатели - Массив ИЗ Строка - Адреса электронной почты (например: "it@massandra.ru")
//
Функция НовыйПараметрыПочтовоеУведомлениеОУвольнении() Экспорт

	Параметры = Новый Структура;
	
	Параметры.Вставить("ИсточникИмя");
	Параметры.Вставить("ИсточникУникальныйИД");
	Параметры.Вставить("мПолучатели", Новый Массив);
	
	Возврат Параметры;
	
КонецФункции

// Функция - Интерфейс для ОтправитьПочтовоеУведомлениеОУвольнении
// 
// Возвращаемое значение:
//  докИнфо	 - Структура:
//				* Документ  - Строка, представление документа (номер, дата)
//				* ФизическоеЛицо - Строка, (представление ссылки) ФИО сотрудника
//				* Сотрудник - Строка, (представление ссылки) ФИО сотрудника
//				* ТабельныйНомер - Строка, табельный номер сотрудника (код элемента справочника)
//				* ПозицияШтатногоРасписания - Строка, (представление ссылки) ПозицияШтатногоРасписания
//				* ДатаУвольнения - Строка, дата которой сотрудник будет уволен (не дата документа)
//				* КоличествоСтавок - Строка, КоличествоСтавок на позиции штатного рассписания
//
Функция НовыйДопИнформацияУведомления() Экспорт
	
	докИнфо = Новый Структура;
	
	докИнфо.Вставить("Документ");
	докИнфо.Вставить("ФизическоеЛицо");
	докИнфо.Вставить("Сотрудник");
	докИнфо.Вставить("ТабельныйНомер");
	докИнфо.Вставить("ПозицияШтатногоРасписания");
	докИнфо.Вставить("ДатаУвольнения");
	докИнфо.Вставить("КоличествоСтавок");
	
	Возврат докИнфо;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеУведомлениеОУвольнении

// Функция - Выбрать сотрудников доступ которым необходимо закрыть
// на основании документа увольнения. А также получить информацию
// на какой должности сотрудник ПРОДОЛЖАЕТ работать для анализа
// нужно ли закрыть доступ или он совмещал аналогичную позицию
// сотрудник ИТ совмещал позицию ИТ и тогда закрыть надо не все!
//
// Параметры:
//  Источник - ДокументСсылкка - Увольнение, УвольнениеСписком
// 
// Возвращаемое значение:
//  ВыборкаДетальныеЗаписи - Если результат запроса пустой
//	Тогда Неопределено Иначе РезультатЗапроса.Выборка() КАК
//				* Документ  - Строка, представление документа (номер, дата)
//				* ФизическоеЛицо - Строка, (представление ссылки) ФИО сотрудника
//				* Сотрудник - Строка, (представление ссылки) ФИО сотрудника
//				* ТабельныйНомер - Строка, табельный номер сотрудника (код элемента справочника)
//				* ПозицияШтатногоРасписания - Строка, (представление ссылки) ПозицияШтатногоРасписания
//				* ДатаУвольнения - Строка, дата которой сотрудник будет уволен (не дата документа)
//				* КоличествоСтавок - Строка, КоличествоСтавок на позиции штатного рассписания
//
Функция ВыбратьСотрудниковДоступКоторымНеобходимоЗакрыть(Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ШтатноеРасписание.Ссылка КАК ПозицияШтатногоРасписания
	|	ПОМЕСТИТЬ ВТПозицииШтатногоРасписанияДляУведомления
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|ГДЕ
	|	НЕ ШтатноеРасписание.Ссылка В (ВЫБРАТЬ ПозицияШтатногоРасписания ИЗ РегистрСведений.NF_ИсключитьДолжностьИзУведомлений)
	|;
	|	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Увольнение.Ссылка КАК Документ,
	|	Увольнение.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Увольнение.Сотрудник КАК Сотрудник,
	|	Увольнение.Сотрудник.Код КАК ТабельныйНомер,
	|	ПозицийШР.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	Увольнение.ДатаУвольнения КАК ДатаУвольнения,
	|	ИСТИНА КАК Уволен,
	|	ПозицийШР.КоличествоСтавок КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТДокУвольнение
	|ИЗ
	|	Документ.Увольнение КАК Увольнение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗанятостьПозицийШтатногоРасписанияИнтервальный КАК ПозицийШР
	|		ПО Увольнение.Ссылка = ПозицийШР.РегистраторЗаписи
	|ГДЕ
	|	Увольнение.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	УвольнениеСпискомСотрудники.Ссылка,
	|	УвольнениеСпискомСотрудники.ФизическоеЛицо,
	|	УвольнениеСпискомСотрудники.Сотрудник,
	|	УвольнениеСпискомСотрудники.Сотрудник.Код,
	|	ПозицийШР.ПозицияШтатногоРасписания,
	|	УвольнениеСпискомСотрудники.ДатаУвольнения,
	|	ИСТИНА,
	|	ПозицийШР.КоличествоСтавок
	|ИЗ
	|	Документ.УвольнениеСписком.Сотрудники КАК УвольнениеСпискомСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗанятостьПозицийШтатногоРасписанияИнтервальный КАК ПозицийШР
	|		ПО УвольнениеСпискомСотрудники.Ссылка = ПозицийШР.РегистраторЗаписи
	|ГДЕ
	|	УвольнениеСпискомСотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокУвольнение.Документ КАК Документ,
	|	ДокУвольнение.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДокУвольнение.Сотрудник КАК Сотрудник,
	|	ДокУвольнение.ТабельныйНомер КАК ТабельныйНомер,
	|	ДокУвольнение.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	ДокУвольнение.ДатаУвольнения КАК ДатаУвольнения,
	|	ДокУвольнение.Уволен КАК Уволен,
	|	ДокУвольнение.КоличествоСтавок КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТРезультат
	|ИЗ
	|	ВТДокУвольнение КАК ДокУвольнение
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.РегистраторЗаписи,
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.ФизическоеЛицо,
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.Сотрудник,
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.Сотрудник.Код,
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.ПозицияШтатногоРасписания,
	|	0,
	|	ЛОЖЬ,
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.КоличествоСтавок
	|ИЗ
	|	РегистрСведений.ЗанятостьПозицийШтатногоРасписанияИнтервальный КАК ЗанятостьПозицийШтатногоРасписанияИнтервальный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокУвольнение КАК ВТДокУвольнение
	|		ПО ЗанятостьПозицийШтатногоРасписанияИнтервальный.ФизическоеЛицо = ВТДокУвольнение.ФизическоеЛицо
	|ГДЕ
	|	ЗанятостьПозицийШтатногоРасписанияИнтервальный.ДатаОкончания > ДАТАВРЕМЯ(3999, 1, 1, 1, 1, 1)
	|	И ЗанятостьПозицийШтатногоРасписанияИнтервальный.ВидЗанятостиПозиции.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиПозицийШтатногоРасписания.Занята)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Результат.Документ) КАК Документ,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Результат.ФизическоеЛицо) КАК ФизическоеЛицо,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Результат.Сотрудник) КАК Сотрудник,
	|	Результат.ТабельныйНомер КАК ТабельныйНомер,
	|	Результат.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	Результат.ДатаУвольнения КАК ДатаУвольнения,
	|	Результат.Уволен КАК Уволен,
	|	Результат.КоличествоСтавок КАК КоличествоСтавок
	|ИЗ
	|	ВТРезультат КАК Результат ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТПозицииШтатногоРасписанияДляУведомления КАК ПозицииШтатногоРасписанияДляУведомления
	|	ПО Результат.ПозицияШтатногоРасписания = ПозицииШтатногоРасписанияДляУведомления.ПозицияШтатногоРасписания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Результат.ФизическоеЛицо,
	|	Результат.Уволен УБЫВ";
		
	Запрос.УстановитьПараметр("Ссылка", Источник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

// Функция - Сформировать уведомление по уволенному сотруднику
//
// Параметры:
//  Выборка	 - РезультатЗапроса.Выбрать() - Выборка запроса:
//				* Документ  - Строка, представление документа (номер, дата)
//				* ФизическоеЛицо - Строка, (представление ссылки) ФИО сотрудника
//				* Сотрудник - Строка, (представление ссылки) ФИО сотрудника
//				* ТабельныйНомер - Строка, табельный номер сотрудника (код элемента справочника)
//				* ПозицияШтатногоРасписания - Строка, (представление ссылки) ПозицияШтатногоРасписания
//				* ДатаУвольнения - Строка, дата которой сотрудник будет уволен (не дата документа)
//				* КоличествоСтавок - Строка, КоличествоСтавок на позиции штатного рассписания
// 
// Возвращаемое значение:
//  Текст - Тело почтового сообщения
//
Функция СформироватьУведомлениеПоУволенномуСотруднику(Выборка)

	мТекст	= Новый Массив;	
	Текст	= "";
	
	Пока Выборка.Следующий() Цикл
		
		докИнфо = НовыйДопИнформацияУведомления();
		ЗаполнитьЗначенияСвойств(докИнфо, Выборка);
		
		Если Выборка.Уволен Тогда
			мТекст.Добавить("Добрый день, в 1С:ЗУП был проведен документ");
			мТекст.Добавить(докИнфо.Документ);
			мТекст.Добавить("Сотрудник " 				   + докИнфо.Сотрудник);
			мТекст.Добавить("Уволен с позиции " + докИнфо.ПозицияШтатногоРасписания);
			мТекст.Добавить("Количество ставок на позиции " + докИнфо.КоличествоСтавок);
			мТекст.Добавить("Необходимо заблокировать доступ к концу дня " + докИнфо.ДатаУвольнения);
		Иначе
			мТекст.Добавить(Символы.ПС);
			мТекст.Добавить("ВНИМАНИЕ: Сотрудник " + докИнфо.Сотрудник);
			мТекст.Добавить("ПРОДОЛЖАЕТ работать на позиции " + докИнфо.ПозицияШтатногоРасписания);
			мТекст.Добавить("Количество ставок на позиции " + докИнфо.КоличествоСтавок);
			мТекст.Добавить("пожалуйста учтите это при блокировки доступа");
		КонецЕсли;
		
		мТекст.Добавить(Символы.ПС);
		мТекст.Добавить(Символы.ПС);

	КонецЦикла;
	
	Текст = СтрСоединить(мТекст,  Символы.ПС);
	
	Возврат Текст;

КонецФункции

#КонецОбласти

#КонецОбласти